name: CI build AppImage with CMake and Qt5

on:
  push:
  release:
    types:
      - created

jobs:

  build-unix-qt5:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-16.04
            QT_FILE: qtBase_5.15.1_xenial.zip
            LIBDE265_REMOTE: libde265.so
            LIBDE265_LOCAL: libde265-internals.so
            ARTIFACT_NAME: YUView.AppImage
    steps:
    - uses: actions/checkout@v2
    - run: git fetch --prune --unshallow

##########################################################################################
############################### Required packages from distributors ######################
##########################################################################################

    - name: Install Linux packages
      run: |
        sudo apt-get update
        sudo apt-get install libgl1-mesa-dev libxkbcommon-x11-0 libpcre2-16-0 '^libxcb.*-dev' libx11-xcb-dev libglu1-mesa-dev libxi-dev libxkbcommon-dev libxkbcommon-x11-dev libatspi2.0-dev
      if: matrix.os == 'ubuntu-16.04' || matrix.os == 'ubuntu-18.04' || matrix.os == 'ubuntu-20.04'

    - name: Install Newer GCC Ubuntu 16.04
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install gcc-9 g++-9
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-9
        sudo update-alternatives --config gcc
      if: matrix.os == 'ubuntu-16.04'

##########################################################################################
############################### Packages build by us: Qt, libde265  ######################
##########################################################################################

    - name: Install Qt base
      run: |
        pwd
        cd $HOME
        mkdir -p YUViewQt
        cd YUViewQt
        curl -L https://github.com/ChristianFeldmann/YUViewQt/releases/download/QtBase-5.15.1/${{matrix.QT_FILE}} -o Qt.zip
        unzip -qa Qt.zip
      shell: bash

    - name: Install Linuxdeployqt
      run: |
        pwd
        cd $HOME
        wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage
        wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage
        chmod +x linuxdeploy*.AppImage
      if: matrix.os == 'ubuntu-16.04'

    - name: Install libde265
      run: |
        cd $HOME
        curl -L https://github.com/ChristianFeldmann/libde265/releases/download/v1.1/${{matrix.LIBDE265_REMOTE}} -o ${{matrix.LIBDE265_LOCAL}}
        curl -L https://raw.githubusercontent.com/ChristianFeldmann/libde265/master/COPYING -o libde265License.txt
      shell: bash

##########################################################################################
############################### Build YUView #############################################
##########################################################################################

    - name: Build Linux/Mac
      run: |
        pwd
        cd $GITHUB_WORKSPACE
        mkdir build
        cd build
        cmake  -DCMAKE_PREFIX_PATH="$HOME/YUViewQt/Qt" -DCMAKE_INSTALL_PREFIX=/usr ..
        cmake --build . --parallel $(nproc)
      shell: bash

##########################################################################################
############################### Unit tests ###############################################
##########################################################################################

    - name: Run unit tests
      run: |
        cd $GITHUB_WORKSPACE/build
        ctest --output-on-failure
        # ctest --output-on-failure --debug --extra-verbose
      shell: bash

##########################################################################################
############################### Packaging YUView, Installers #############################
##########################################################################################

    # - name: Build App (Mac)
    #   run: |
    #     macdeployqt build/YUViewApp/YUView.app -always-overwrite -verbose=2
    #     cp ${{matrix.LIBDE265_LOCAL}} build/YUViewApp/YUView.app/Contents/MacOS/.
    #     cd build/YUViewApp
    #     # Zip
    #     zip -r ${{matrix.ARTIFACT_NAME}} YUView.app/
    #     mkdir $GITHUB_WORKSPACE/artifacts
    #     cp ${{matrix.ARTIFACT_NAME}} $GITHUB_WORKSPACE/artifacts/
    #   if: matrix.os == 'macos-10.15' || matrix.os == 'macos-11.0'

    - name: Build Appimage (Linux)
      run: |
        cd $GITHUB_WORKSPACE/build
        make install DESTDIR=appdir      
        echo "Test 123"
        # test=$(which qmake)
        # echo $test
        QMAKE="$HOME/YUViewQt/Qt/bin/qmake"
        $HOME/linuxdeploy-x86_64.AppImage  --appdir appdir --plugin qt  --output appimage
        mv YUView-*.AppImage YUView.AppImage
        mkdir $GITHUB_WORKSPACE/artifacts
        cp YUView.AppImage $GITHUB_WORKSPACE/artifacts/
        cd $GITHUB_WORKSPACE
        ls -l
        cd $GITHUB_WORKSPACE/artifacts
        ls -l
      if: matrix.os == 'ubuntu-16.04'
      shell: bash

##########################################################################################
############################### Upload ###################################################
##########################################################################################


  # How to upload files to the release:
  # https://github.com/Blacksmoke16/oq/pull/47/files#diff-082c28d748ad2e3eecc5508d740d9417R9-R29
  # Mime type list
  # https://www.iana.org/assignments/media-types/media-types.xhtml
